<?xml version="1.0"?>
<!-- Config -->
<configuration>
    <!-- Mail appender-->
    <appender name="MailAppender" type="log4net.Appender.SmtpAppender">
        <filter type="log4net.Filter.LevelRangeFilter">
            <param name="levelMin" value="ERROR" />
			<!--Sets the level of logging, in this case any ERROR in the log will be sent as an email-->
        </filter>
        <filter type="log4net.Filter.DenyAllFilter" />
        <evaluator type="log4net.Core.LevelEvaluator">
            <param name="threshold" value="ERROR"/>
			<!--Sets the level of logging, in this case any ERROR in the log will be sent as an email-->
        </evaluator>
        <param name="to" value="to@company.tld" />
        <param name="from" value="from@company.tld" />
        <param name="subject" value="SubjectofEmail" />
        <param name="smtpHost" value="smtp.office365.com" />
        <param name="port" value="587" />
        <param name="EnableSsl" value="true" />
        <param name="Authentication" value="Basic" />
        <param name="username" value="username@company.tld" />
        <param name="password" value="PasswordtoUserName" />
        <param name="bufferSize" value="0" /> <!-- Set this to 0 to make sure an email is sent on every error -->
        <param name="lossy" value="true" />
        <layout type="log4net.Layout.PatternLayout">
            <param name="conversionPattern" value="Date: %date %newlineTask Name: %property{TaskName}%newlineAppName:%property{AppName}%newlineError Message: %message%newline%newline%newline" />
			<!--Defined conversion pattern for the output. To be able to output custom properties in the log (example, Taskname), append %property{propertyname} to the output pattern-->
        </layout>
    </appender>
    <!--Send mail on task failure-->
    <logger name="System.Scheduler.Scheduler.Slave.Tasks.ReloadTask">
	<!--Logger name identifies the component to monitor. This can be found by investigating the actual log file-->
        <appender-ref ref="MailAppender" />
		<!--appender-ref should match the name identifying the appender. More than one appender can be configured in the same configuration file-->
    </logger>
    <logger name="System.Scheduler.Scheduler.Master.Task.TaskSession">
	<!--Logger name identifies the component to monitor. This can be found by investigating the actual log file-->
        <appender-ref ref="MailAppender" />
		<!--appender-ref should match the name identifying the appender. More than one appender can be configured in the same configuration file-->
    </logger>
</configuration>